server {
	listen 80;
	listen [::]:80;
	http2 on;
	server_name youtube.local www.youtube.local;
	error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    return 301 https://$host$request_uri;
}

server {
	listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
	server_name youtube.local www.youtube.local;

	error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    root /var/www/public;

	ssl_verify_client off;
	ssl_certificate /etc/nginx/conf.d/youtube.local/cert.crt;
	ssl_certificate_key /etc/nginx/conf.d/youtube.local/cert.key;

	add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    index index.php;

    charset utf-8;

    proxy_read_timeout 600s;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    #location /file {
    #    proxy_read_timeout 600s;
    #}

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php:9000;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }
}

#
# Configure Nginx as a proxy for PHP Websocket Server
#
upstream websocket-local {
    server php:6001;
}

server {
    listen        443 ssl;
    server_name   wss.youtube.local www.youtube.local;

    access_log    /var/log/nginx/access.log;
    error_log     /var/log/nginx/error.log;

    # Start the SSL configurations
    ssl_verify_client off;
    ssl_certificate /etc/nginx/conf.d/youtube.local/cert.crt;
    ssl_certificate_key /etc/nginx/conf.d/youtube.local/cert.key;

    #ssl_session_timeout         3m;
    #ssl_session_cache           shared:SSL:30m;
    #ssl_protocols               TLSv1.1 TLSv1.2;

    # Diffie Hellmann performance improvements
    #ssl_ecdh_curve              secp384r1;

    location / {
        proxy_http_version 1.1;
        proxy_set_header Origin $http_origin;
        proxy_set_header Host $http_host;
        proxy_set_header Scheme $scheme;
        proxy_set_header Cache-Control $http_cache_control;
        proxy_set_header Pragma $http_pragma;
        #proxy_set_header SERVER_PORT $server_port;
        #proxy_set_header REMOTE_ADDR $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Sec-Websocket-Extensions $http_sec_websocket_extensions;
        proxy_set_header Sec-Websocket-Key $http_sec_websocket_key;
        proxy_set_header Sec-Websocket-Version $http_sec_websocket_version;

        proxy_pass http://websocket-local;
    }
}
